// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Calculate - api that takes two ints
type Calculate struct {
	FirstInt             int32    `protobuf:"varint,1,opt,name=first_int,json=firstInt,proto3" json:"first_int,omitempty"`
	SecondInt            int32    `protobuf:"varint,2,opt,name=second_int,json=secondInt,proto3" json:"second_int,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Calculate) Reset()         { *m = Calculate{} }
func (m *Calculate) String() string { return proto.CompactTextString(m) }
func (*Calculate) ProtoMessage()    {}
func (*Calculate) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *Calculate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Calculate.Unmarshal(m, b)
}
func (m *Calculate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Calculate.Marshal(b, m, deterministic)
}
func (m *Calculate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Calculate.Merge(m, src)
}
func (m *Calculate) XXX_Size() int {
	return xxx_messageInfo_Calculate.Size(m)
}
func (m *Calculate) XXX_DiscardUnknown() {
	xxx_messageInfo_Calculate.DiscardUnknown(m)
}

var xxx_messageInfo_Calculate proto.InternalMessageInfo

func (m *Calculate) GetFirstInt() int32 {
	if m != nil {
		return m.FirstInt
	}
	return 0
}

func (m *Calculate) GetSecondInt() int32 {
	if m != nil {
		return m.SecondInt
	}
	return 0
}

type Number struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Number) Reset()         { *m = Number{} }
func (m *Number) String() string { return proto.CompactTextString(m) }
func (*Number) ProtoMessage()    {}
func (*Number) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *Number) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Number.Unmarshal(m, b)
}
func (m *Number) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Number.Marshal(b, m, deterministic)
}
func (m *Number) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Number.Merge(m, src)
}
func (m *Number) XXX_Size() int {
	return xxx_messageInfo_Number.Size(m)
}
func (m *Number) XXX_DiscardUnknown() {
	xxx_messageInfo_Number.DiscardUnknown(m)
}

var xxx_messageInfo_Number proto.InternalMessageInfo

func (m *Number) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

// CalculateRequest - request object
type CalculateRequest struct {
	Calculate            *Calculate `protobuf:"bytes,1,opt,name=calculate,proto3" json:"calculate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CalculateRequest) Reset()         { *m = CalculateRequest{} }
func (m *CalculateRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateRequest) ProtoMessage()    {}
func (*CalculateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *CalculateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateRequest.Unmarshal(m, b)
}
func (m *CalculateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateRequest.Marshal(b, m, deterministic)
}
func (m *CalculateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateRequest.Merge(m, src)
}
func (m *CalculateRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateRequest.Size(m)
}
func (m *CalculateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateRequest proto.InternalMessageInfo

func (m *CalculateRequest) GetCalculate() *Calculate {
	if m != nil {
		return m.Calculate
	}
	return nil
}

// CalculateResponse - response object
type CalculateResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateResponse) Reset()         { *m = CalculateResponse{} }
func (m *CalculateResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateResponse) ProtoMessage()    {}
func (*CalculateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *CalculateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateResponse.Unmarshal(m, b)
}
func (m *CalculateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateResponse.Marshal(b, m, deterministic)
}
func (m *CalculateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateResponse.Merge(m, src)
}
func (m *CalculateResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateResponse.Size(m)
}
func (m *CalculateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateResponse proto.InternalMessageInfo

func (m *CalculateResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// stream server Request and Response Objects
type CalculateManyPrimesRequest struct {
	Num                  *Number  `protobuf:"bytes,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateManyPrimesRequest) Reset()         { *m = CalculateManyPrimesRequest{} }
func (m *CalculateManyPrimesRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateManyPrimesRequest) ProtoMessage()    {}
func (*CalculateManyPrimesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{4}
}

func (m *CalculateManyPrimesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateManyPrimesRequest.Unmarshal(m, b)
}
func (m *CalculateManyPrimesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateManyPrimesRequest.Marshal(b, m, deterministic)
}
func (m *CalculateManyPrimesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateManyPrimesRequest.Merge(m, src)
}
func (m *CalculateManyPrimesRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateManyPrimesRequest.Size(m)
}
func (m *CalculateManyPrimesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateManyPrimesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateManyPrimesRequest proto.InternalMessageInfo

func (m *CalculateManyPrimesRequest) GetNum() *Number {
	if m != nil {
		return m.Num
	}
	return nil
}

type CalculateManyPrimesResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateManyPrimesResponse) Reset()         { *m = CalculateManyPrimesResponse{} }
func (m *CalculateManyPrimesResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateManyPrimesResponse) ProtoMessage()    {}
func (*CalculateManyPrimesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{5}
}

func (m *CalculateManyPrimesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateManyPrimesResponse.Unmarshal(m, b)
}
func (m *CalculateManyPrimesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateManyPrimesResponse.Marshal(b, m, deterministic)
}
func (m *CalculateManyPrimesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateManyPrimesResponse.Merge(m, src)
}
func (m *CalculateManyPrimesResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateManyPrimesResponse.Size(m)
}
func (m *CalculateManyPrimesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateManyPrimesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateManyPrimesResponse proto.InternalMessageInfo

func (m *CalculateManyPrimesResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// Client Server Stream
type CalculateAverageRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateAverageRequest) Reset()         { *m = CalculateAverageRequest{} }
func (m *CalculateAverageRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateAverageRequest) ProtoMessage()    {}
func (*CalculateAverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{6}
}

func (m *CalculateAverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateAverageRequest.Unmarshal(m, b)
}
func (m *CalculateAverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateAverageRequest.Marshal(b, m, deterministic)
}
func (m *CalculateAverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateAverageRequest.Merge(m, src)
}
func (m *CalculateAverageRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateAverageRequest.Size(m)
}
func (m *CalculateAverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateAverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateAverageRequest proto.InternalMessageInfo

func (m *CalculateAverageRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type CalculateAverageResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateAverageResponse) Reset()         { *m = CalculateAverageResponse{} }
func (m *CalculateAverageResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateAverageResponse) ProtoMessage()    {}
func (*CalculateAverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{7}
}

func (m *CalculateAverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateAverageResponse.Unmarshal(m, b)
}
func (m *CalculateAverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateAverageResponse.Marshal(b, m, deterministic)
}
func (m *CalculateAverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateAverageResponse.Merge(m, src)
}
func (m *CalculateAverageResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateAverageResponse.Size(m)
}
func (m *CalculateAverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateAverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateAverageResponse proto.InternalMessageInfo

func (m *CalculateAverageResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Calculate)(nil), "calculator.Calculate")
	proto.RegisterType((*Number)(nil), "calculator.Number")
	proto.RegisterType((*CalculateRequest)(nil), "calculator.CalculateRequest")
	proto.RegisterType((*CalculateResponse)(nil), "calculator.CalculateResponse")
	proto.RegisterType((*CalculateManyPrimesRequest)(nil), "calculator.CalculateManyPrimesRequest")
	proto.RegisterType((*CalculateManyPrimesResponse)(nil), "calculator.CalculateManyPrimesResponse")
	proto.RegisterType((*CalculateAverageRequest)(nil), "calculator.CalculateAverageRequest")
	proto.RegisterType((*CalculateAverageResponse)(nil), "calculator.CalculateAverageResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xdb, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x4d, 0x8b, 0xc1, 0x4c, 0x8b, 0x87, 0x01, 0x6b, 0x49, 0x2d, 0xe8, 0x5a, 0xb4, 0x50,
	0xa8, 0xda, 0xe2, 0x03, 0x58, 0x2f, 0x4a, 0x2f, 0x2a, 0x12, 0xef, 0xbc, 0x91, 0x34, 0x6e, 0x25,
	0xd0, 0x6c, 0xe2, 0xee, 0xa6, 0xe0, 0x3b, 0xf9, 0x90, 0xe2, 0x6e, 0x0e, 0x2b, 0x8d, 0xf6, 0x6e,
	0xe7, 0x9f, 0xc3, 0x37, 0xf3, 0xc3, 0x42, 0x3f, 0xf0, 0x57, 0x41, 0xba, 0xf2, 0x65, 0xcc, 0xaf,
	0xcb, 0x67, 0xb2, 0x30, 0x82, 0x61, 0xc2, 0x63, 0x19, 0x23, 0x94, 0x0a, 0x99, 0x82, 0xf3, 0x90,
	0x45, 0x14, 0x3b, 0xe0, 0x2c, 0x43, 0x2e, 0xe4, 0x6b, 0xc8, 0x64, 0xdb, 0x3a, 0xb3, 0xfa, 0xbb,
	0xde, 0x9e, 0x12, 0x66, 0x4c, 0x62, 0x17, 0x40, 0xd0, 0x20, 0x66, 0x6f, 0x2a, 0x5b, 0x53, 0x59,
	0x47, 0x2b, 0x33, 0x26, 0xc9, 0x00, 0xec, 0xc7, 0x34, 0x5a, 0x50, 0x8e, 0xe7, 0xd0, 0xd4, 0x53,
	0x98, 0x8a, 0xb3, 0x41, 0x0d, 0xa5, 0xe9, 0x12, 0x32, 0x85, 0xc3, 0x82, 0xea, 0xd1, 0x8f, 0x94,
	0x0a, 0x89, 0x63, 0x70, 0xf2, 0xbd, 0xa8, 0xea, 0x69, 0x8c, 0x8e, 0x87, 0xc6, 0xee, 0x65, 0x43,
	0x59, 0x47, 0x06, 0x70, 0x64, 0x0c, 0x12, 0x49, 0xcc, 0x04, 0xc5, 0x16, 0xd8, 0x9c, 0x8a, 0x74,
	0x95, 0xdf, 0x90, 0x45, 0x64, 0x02, 0x6e, 0x51, 0x3c, 0xf7, 0xd9, 0xe7, 0x13, 0x0f, 0x23, 0x2a,
	0x72, 0x7e, 0x0f, 0xea, 0x2c, 0x8d, 0x32, 0x32, 0x9a, 0x64, 0xbd, 0xb4, 0xf7, 0x93, 0x26, 0x77,
	0xd0, 0xa9, 0x9c, 0xb1, 0x05, 0x7d, 0x0b, 0x27, 0x45, 0xdb, 0xfd, 0x9a, 0x72, 0xff, 0xbd, 0xb8,
	0xbb, 0x05, 0xb6, 0x61, 0x54, 0xdd, 0xcb, 0x22, 0x32, 0x82, 0xf6, 0x66, 0x4b, 0x25, 0xa6, 0x9e,
	0x63, 0x46, 0x5f, 0x35, 0xc3, 0xd8, 0x67, 0xca, 0xd7, 0x61, 0x40, 0x71, 0x0e, 0xcd, 0x52, 0x4b,
	0x23, 0x3c, 0xad, 0x76, 0x55, 0xaf, 0xe3, 0x76, 0xff, 0xc8, 0x6a, 0x32, 0xd9, 0xc1, 0x25, 0x1c,
	0x14, 0xb2, 0xbe, 0x1e, 0x2f, 0x2b, 0x7b, 0x36, 0x2c, 0x76, 0xaf, 0xb6, 0xd6, 0xe5, 0x94, 0x1b,
	0x0b, 0x7d, 0xe3, 0x94, 0xec, 0x7e, 0xbc, 0xa8, 0x1c, 0xf0, 0xdb, 0x50, 0xb7, 0xf7, 0x7f, 0x51,
	0x8e, 0xe8, 0x5b, 0x93, 0xfd, 0x97, 0xa6, 0xf9, 0x53, 0x16, 0xb6, 0xfa, 0x1f, 0xe3, 0xef, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x8f, 0x41, 0xe5, 0x5e, 0x4b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculateServiceClient is the client API for CalculateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculateServiceClient interface {
	// unary API call
	CalculateSum(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error)
	// server streaming
	CalculatePrimes(ctx context.Context, in *CalculateManyPrimesRequest, opts ...grpc.CallOption) (CalculateService_CalculatePrimesClient, error)
	// client streaming
	CalculateAverage(ctx context.Context, opts ...grpc.CallOption) (CalculateService_CalculateAverageClient, error)
}

type calculateServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculateServiceClient(cc *grpc.ClientConn) CalculateServiceClient {
	return &calculateServiceClient{cc}
}

func (c *calculateServiceClient) CalculateSum(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error) {
	out := new(CalculateResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculateService/CalculateSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) CalculatePrimes(ctx context.Context, in *CalculateManyPrimesRequest, opts ...grpc.CallOption) (CalculateService_CalculatePrimesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculateService_serviceDesc.Streams[0], "/calculator.CalculateService/CalculatePrimes", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculateServiceCalculatePrimesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculateService_CalculatePrimesClient interface {
	Recv() (*CalculateManyPrimesResponse, error)
	grpc.ClientStream
}

type calculateServiceCalculatePrimesClient struct {
	grpc.ClientStream
}

func (x *calculateServiceCalculatePrimesClient) Recv() (*CalculateManyPrimesResponse, error) {
	m := new(CalculateManyPrimesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculateServiceClient) CalculateAverage(ctx context.Context, opts ...grpc.CallOption) (CalculateService_CalculateAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculateService_serviceDesc.Streams[1], "/calculator.CalculateService/CalculateAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculateServiceCalculateAverageClient{stream}
	return x, nil
}

type CalculateService_CalculateAverageClient interface {
	Send(*CalculateAverageRequest) error
	CloseAndRecv() (*CalculateAverageResponse, error)
	grpc.ClientStream
}

type calculateServiceCalculateAverageClient struct {
	grpc.ClientStream
}

func (x *calculateServiceCalculateAverageClient) Send(m *CalculateAverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculateServiceCalculateAverageClient) CloseAndRecv() (*CalculateAverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CalculateAverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculateServiceServer is the server API for CalculateService service.
type CalculateServiceServer interface {
	// unary API call
	CalculateSum(context.Context, *CalculateRequest) (*CalculateResponse, error)
	// server streaming
	CalculatePrimes(*CalculateManyPrimesRequest, CalculateService_CalculatePrimesServer) error
	// client streaming
	CalculateAverage(CalculateService_CalculateAverageServer) error
}

// UnimplementedCalculateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculateServiceServer struct {
}

func (*UnimplementedCalculateServiceServer) CalculateSum(ctx context.Context, req *CalculateRequest) (*CalculateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateSum not implemented")
}
func (*UnimplementedCalculateServiceServer) CalculatePrimes(req *CalculateManyPrimesRequest, srv CalculateService_CalculatePrimesServer) error {
	return status.Errorf(codes.Unimplemented, "method CalculatePrimes not implemented")
}
func (*UnimplementedCalculateServiceServer) CalculateAverage(srv CalculateService_CalculateAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method CalculateAverage not implemented")
}

func RegisterCalculateServiceServer(s *grpc.Server, srv CalculateServiceServer) {
	s.RegisterService(&_CalculateService_serviceDesc, srv)
}

func _CalculateService_CalculateSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).CalculateSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculateService/CalculateSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).CalculateSum(ctx, req.(*CalculateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_CalculatePrimes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CalculateManyPrimesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculateServiceServer).CalculatePrimes(m, &calculateServiceCalculatePrimesServer{stream})
}

type CalculateService_CalculatePrimesServer interface {
	Send(*CalculateManyPrimesResponse) error
	grpc.ServerStream
}

type calculateServiceCalculatePrimesServer struct {
	grpc.ServerStream
}

func (x *calculateServiceCalculatePrimesServer) Send(m *CalculateManyPrimesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculateService_CalculateAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculateServiceServer).CalculateAverage(&calculateServiceCalculateAverageServer{stream})
}

type CalculateService_CalculateAverageServer interface {
	SendAndClose(*CalculateAverageResponse) error
	Recv() (*CalculateAverageRequest, error)
	grpc.ServerStream
}

type calculateServiceCalculateAverageServer struct {
	grpc.ServerStream
}

func (x *calculateServiceCalculateAverageServer) SendAndClose(m *CalculateAverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculateServiceCalculateAverageServer) Recv() (*CalculateAverageRequest, error) {
	m := new(CalculateAverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalculateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculateService",
	HandlerType: (*CalculateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalculateSum",
			Handler:    _CalculateService_CalculateSum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CalculatePrimes",
			Handler:       _CalculateService_CalculatePrimes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CalculateAverage",
			Handler:       _CalculateService_CalculateAverage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
