
syntax = "proto3";
package calculator;
option go_package = "calculatorpb";

// Calculate - api that takes two ints 
message Calculate {
    int32 first_int = 1;
    int32 second_int  = 2;
}

message Number {
    int32 first_number = 1;
}

// CalculateRequest - request object
message CalculateRequest {
    Calculate calculate = 1;
}

// CalculateResponse - response object 
message CalculateResponse {
    int32 result = 1;
}


// stream server Request and Response Objects 
message CalculateManyPrimesRequest {
    Number num = 1;
}

message CalculateManyPrimesResponse {
    int32 result = 1;
}


// Client Server Stream
message CalculateAverageRequest {
    int64 number = 1;
}

message CalculateAverageResponse {
    int64 result = 1;
}

// Bidirectional Streaming 
message CalculateMaxRequest {
    int64 number = 1;
}

message CalculateMaxResponse {
    int64 result = 1;
}

// unnary request for square root 
message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double result = 1;
}


// Calculator Services 
service CalculateService {
    // unary API call 
    rpc CalculateSum(CalculateRequest) returns (CalculateResponse) {};

    // server streaming 
    rpc CalculatePrimes(CalculateManyPrimesRequest) returns (stream CalculateManyPrimesResponse) {}

    // client streaming 
    rpc CalculateAverage(stream CalculateAverageRequest) returns (CalculateAverageResponse) {}

    // bidirectional streaming 
    rpc CalculateMax(stream CalculateMaxRequest) returns (stream CalculateMaxResponse) {}

    // unary api call
    // rpc will throw an exception if the number is negative
    // the error thrown out is of type INVALID_ARGUEMENT 
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {}
}





